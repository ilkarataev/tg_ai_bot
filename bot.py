# import re,os.path,shutil,yadisk
import traceback,sys,pytz
import string,random,re,time
import random
import telebot 
from telebot import types
from libs import config as configs
from libs import mysql as mysqlfunc
from datetime import datetime
import logging
from telebot.types import ReplyKeyboardRemove, CallbackQuery

utc_tz = pytz.timezone('UTC')
bot = telebot.TeleBot(configs.bot_token,parse_mode='MARKDOWN')
email='Agency@gneuro.ru' 
userInfo = {}

@bot.message_handler(commands=['about'])
def about(message):
    text = """
        –¢—É—Ç –º—ã —Ä–∞—Å—Å–∫–∞–∂–µ–º –Ω–µ–º–Ω–æ–≥–æ –æ –±–æ—Ç–µ! ‚ù§Ô∏è

        –≠—Ç–æ –ë–æ—Çü§ñ –∞–∫–∞–¥–µ–º–∏–∏ Gneuro [Gneuro.ru](https://gneuro.ru/)
        –¢–≤–æ–π –ø—Ä–æ–≤–æ–¥–Ω–∏–∫ –≤ –º–∏—Ä –Ω–µ–π—Ä–æ—Å–µ—Ç–µ–π.‚ö°Ô∏èüß†üöÄ 
        1. –í—ã–±–µ—Ä–∏ —Ç–µ–º—É –¥–ª—è –≤–∏–¥–µ–æ.
        2. –ó–∞–≥—Ä—É–∑–∏ —Ñ–æ—Ç–æ.
        3. –ü–æ–¥–æ–∂–¥–∞—Ç—å –ø–æ–∫–∞ —Ç—Ä—É–¥–∏—Ç—Å—è –Ω–µ–π—Ä–æ—Å–µ—Ç—å.
        4. –ë–æ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç –≤–∏–¥–µo –≤ —Ç–æ—Ç –∂–µ —á–∞—Ç.
        5. –£–ª—ã–±–Ω—É—Ç—å—Å—è –ø—Ä–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ –≤–∏–¥–µ–æ.

        –ï—Å—Ç—å  –≤–æ–ø—Ä–æ—Å—ã –ø–æ –Ω–µ–π—Ä–æ—Å–µ—Ç—è–º‚ùì
        –ù–∞–ø–∏—à–∏ –Ω–∞–º –∏ –º—ã —Ä–∞—Å—Å–∫–∞–∂–µ–º @gneuroacademy
        –û—Å—Ç–∞–ª—å–Ω–æ–µ —Å–º–æ—Ç—Ä–∏ –Ω–∞ —Å–∞–π—Ç–µ [Gneuro.ru](https://gneuro.ru/)
        """
    bot.send_message(message.from_user.id, text)
    return

@bot.message_handler(commands=['contacts'])
def contacts(message):
    text = """ 
        –ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã:
        üìå[–ò–Ω—Å—Ç–∞–≥—Ä–∞–º](https://instagram.com/gneuroacademy?igshid=MzRlODBiNWFlZA==)
        üî¥[YouTube](https://youtube.com/@GNeuro)
         ‚úîÔ∏è[Telegram](https://t.me/GNeuro)
        üü¢[WhatsApp](https://wa.me/79936225631?text=%D0%9F%D1%80%D0%B8%D0%B2%D0%B5%D1%82!%20%F0%9F%91%8B%20%D1%8F%20%D0%BF%D0%BE%20%D0%BF%D0%BE%D0%B2%D0%BE%D0%B4%D1%83%20%D0%BE%D0%B1%D1%83%D1%87%D0%B5%D0%BD%D0%B8%D1%8F)
        """
    bot.send_message(message.from_user.id, text, disable_web_page_preview=True)
    return


@bot.message_handler(commands=['donate'])
def donate(message):
    bot.send_photo(chat_id=message.chat.id, photo=open('./libs/imgs/qr.png', 'rb'),caption='–°–ë–ü –¥–æ–Ω–∞—Ç')
    text = """ 
        –ù–∞—à–µ–º—É –ø—Ä–æ–µ–∫—Ç—É –Ω—É–∂–µ–Ω –Ω–µ–±–æ–ª—å—à–æ–π –¥–æ–Ω–∞—Ç –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è.
        –ï—Å–ª–∏ –≤—ã –ø–æ–ª—É—á–∏–ª–∏ –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–µ —ç–º–æ—Ü–∏–∏ –∏ —É–ª—ã–±–Ω—É–ª–∏—Å—å.
        –ü–æ QR –∫–æ–¥—É –º–æ–∂–Ω–æ –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –Ω–∞—à –ø—Ä–æ–µ–∫—Ç.
        –ú—ã —É–∂–µ –æ—Ç—Ä–µ–Ω–¥—Ä–∏–ª–∏ —Å–≤—ã—à–µ —Ç—ã—Å—è—á–∏ —Ä–æ–ª–∏–∫–æ–≤ –±–µ—Å–ø–ª–∞—Ç–Ω–æ.
        –ò —É –Ω–∞—Å –µ—â–µ —Ç—ã—Å—è—á–∏ –∏–¥–µ–π –¥–ª—è –Ω–æ–≤—ã—Ö —Ä–æ–ª–∏–∫–æ–≤.
        –ó–∞–∫–∏–Ω—å –±–æ–ª—å—à–µ –≤—Å–µ—Ö –∏ –ø–æ–ª—É—á–∏—à—å + –∫ –∫–∞—Ä–º–µ.
        """
    bot.send_message(message.from_user.id, text, disable_web_page_preview=True)
    return

@bot.message_handler(commands=['stop'])
def stop(message):
    print( mysqlfunc.check_user_render_queue(message.from_user.id))
    if not mysqlfunc.check_user_render_queue(message.from_user.id):
        bot.send_message(message.chat.id, '–í–∏–¥–µ–æ –≤ –æ—á–µ—Ä–µ–¥–∏ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É, –ø–æ–∂–∞–π–ª—É—Å—Ç–∞ –æ–∂–∏–¥–∞–π—Ç–µ –≥–æ—Ç–æ–≤–æ–≥–æ –≤–∏–¥–µ–æ',reply_markup=types.ReplyKeyboardRemove())
        return
    keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=False)
    keyboard.add(types.KeyboardButton(text='–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞'))
    bot.clear_step_handler_by_chat_id(message.from_user.id)
    userInfo.clear()
    mysqlfunc.clean_unfinish(message.from_user.id)
    bot.send_message(message.from_user.id, '–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞',reply_markup=keyboard)

def initialize_user_info(message):
    userInfo[str(message.chat.id)+'_category'] = ''
    userInfo[str(message.chat.id)+'_get_video_clips_names'] =''
    userInfo[str(message.chat.id)+'_photo'] = ''

def send_welcome_message(message):
    bot.send_message(message.from_user.id, ' \
    –Ø —Ä–µ–Ω–¥—Ä–∏–Ω–≥ –±–æ—Ç ü§ñ –æ—Ç –∫–æ–º–ø–∞–Ω–∏–∏ GNEURO.\n \
    üß†üöÄ –ú—ã –æ–±—É—á–∞–µ–º —Ä–∞–±–æ—Ç–µ —Å –Ω–µ–π—Ä–æ—Å–µ—Ç—è–º–∏.\n \
    –í—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–µ—Ç–∏—Ç—å –Ω–∞—à —Å–∞–π—Ç: [Gneuro.ru/sd](https://gneuro.ru/sd)')
    bot.send_message(message.from_user.id, "–ï—Å–ª–∏ –≤—ã –Ω–µ –≤–∏–¥–∏—Ç–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∏–∫–æ–Ω–∫—É —Å —á–µ—Ç—ã—Ä—å–º—è –∫–≤–∞–¥—Ä–∞—Ç–∞–º–∏ –≤–Ω–∏–∑—É —ç–∫—Ä–∞–Ω–∞, —á—Ç–æ–±—ã –µ–µ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—å.")
def first_step_render(message):
    print('first_step_render ' +str(mysqlfunc.get_bot_step(message.chat.id)))
    if message.text == '/stop': stop(message); return
    if message.text == '/about': about(message)
    if message.text == '/contacts': contacts(message)
    if message.text == '/donate': donate(message)
    keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
    keyboard.add(types.KeyboardButton("–°—Ç–∞—Ç—å –≥–µ—Ä–æ–µ–º –≤–∏–¥–µ–æ ü¶∏"), \
        types.KeyboardButton("–•–æ—á—É —Å–∞–º –¥–µ–ª–∞—Ç—å –¥–∏–ø—Ñ–µ–π–∫–∏ –≤ –Ω–µ–π—Ä–æ—Å–µ—Ç—è—Ö üß†üíªüîß", web_app=types.WebAppInfo("https://gneuro.ru/sd")), \
        types.KeyboardButton("–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–µ–∫—Ç üç©üí∏üç©"))
    bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –æ–ø—Ü–∏–π:', reply_markup=keyboard)
    mysqlfunc.insert_bot_step(message.chat.id,'first_step_render',pytz.datetime.datetime.now(utc_tz).strftime('%Y-%m-%d %H:%M:%S'))
    bot.register_next_step_handler(message, handle_option)

def handle_option(message):
    print('handle_option ' +str(mysqlfunc.get_bot_step(message.chat.id)))
    if message.text == '/stop': stop(message); return
    if message.text == '/about': about(message)
    if message.text == '/contacts': contacts(message)
    if message.text == '/donate': donate(message)
    if message.text == "–°—Ç–∞—Ç—å –≥–µ—Ä–æ–µ–º –≤–∏–¥–µ–æ" or mysqlfunc.get_bot_step(message.chat.id) == 'back_to_category':
        mysqlfunc.insert_bot_step(message.chat.id, 'go_to_category', pytz.datetime.datetime.now(utc_tz).strftime('%Y-%m-%d %H:%M:%S'))
        video_clip_categories(message)
    else:
        keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
        keyboard.add(types.KeyboardButton("–°—Ç–∞—Ç—å –≥–µ—Ä–æ–µ–º –≤–∏–¥–µ–æ"), \
            types.KeyboardButton("–•–æ—á—É —Å–∞–º –¥–µ–ª–∞—Ç—å –¥–∏–ø—Ñ–µ–π–∫–∏ –≤ –Ω–µ–π—Ä–æ—Å–µ—Ç—è—Ö", web_app=types.WebAppInfo("https://gneuro.ru/sd")))
        bot.send_message(message.from_user.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –æ–ø—Ü–∏–π.',reply_markup=keyboard)
        bot.register_next_step_handler(message, handle_option)

def video_clip_categories(message):
    db_step=mysqlfunc.get_bot_step(message.chat.id)
    print('video_clip_categories ' +str(db_step))
    if message.text == '/stop': stop(message); return
    if message.text == '/about': about(message)
    if message.text == '/contacts': contacts(message)
    if message.text == '/donate': donate(message)
    keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=False)
    get_video_clips_category = mysqlfunc.get_video_clips_name('category')
    categories = [item['category'] for item in get_video_clips_category]
    for category in get_video_clips_category:
        keyboard.add(types.KeyboardButton(text=category['category']))
    if db_step == 'go_to_category' and message.text == '–°—Ç–∞—Ç—å –≥–µ—Ä–æ–µ–º –≤–∏–¥–µ–æ' or \
        db_step == 'go_to_category' and message.text == '–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É –∫–∞—Ç–∞–ª–æ–≥–∞':
        bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –≤–∏–¥–µ–æ', reply_markup=keyboard)
        mysqlfunc.insert_bot_step(message.chat.id,'get_category',pytz.datetime.datetime.now(utc_tz).strftime('%Y-%m-%d %H:%M:%S'))
        bot.register_next_step_handler(message, choose_clip_name)
    elif db_step == 'go_to_category' and message.text in categories:
        mysqlfunc.insert_bot_step(message.chat.id,'get_category',pytz.datetime.datetime.now(utc_tz).strftime('%Y-%m-%d %H:%M:%S'))
        choose_clip_name(message)
    else:

        keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=False)
        bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –≤–∏–¥–µ–æ',reply_markup=keyboard)
        bot.register_next_step_handler(message, video_clip_categories)

def choose_clip_name(message):
    print("choose_clip_name")
    keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=False)
    get_video_clips_category = mysqlfunc.get_video_clips_name('category')
    categories = [item['category'] for item in get_video_clips_category]
    if  message.text in categories:
        userInfo[str(message.chat.id)+'_category'] = message.text
    if message.text == '/stop': stop(message); return
    if message.text == '/about': about(message)
    if message.text == '/contacts': contacts(message)
    if message.text == '/donate': donate(message)

    if mysqlfunc.get_bot_step(message.chat.id) == 'get_category' and userInfo[str(message.chat.id)+'_category'] in categories:
        get_video_clips_name=mysqlfunc.get_video_clips_name('by_category',message.text)
        for clip in get_video_clips_name :
                keyboard.add(types.KeyboardButton(text=clip['name_en']))
        keyboard.add(types.KeyboardButton(text='–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É –∫–∞—Ç–∞–ª–æ–≥–∞'))
        bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É –≤–∏–¥–µ–æ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–∞—à–µ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏', reply_markup=keyboard)
        mysqlfunc.insert_bot_step(message.chat.id, 'get_clip_name', pytz.datetime.datetime.now(utc_tz).strftime('%Y-%m-%d %H:%M:%S'))
        bot.register_next_step_handler(message, photo_handler)  
    else:
        get_video_clips_category = mysqlfunc.get_video_clips_name('category')
        for category in get_video_clips_category:
            keyboard.add(types.KeyboardButton(text=category['category']))
        bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –≤–∏–¥–µ–æ',reply_markup=keyboard)
        bot.register_next_step_handler(message, choose_clip_name)


@bot.message_handler(commands=['start'])
def start(message):
    if not mysqlfunc.check_user_render_queue(message.from_user.id):
        bot.send_message(message.chat.id, '–í–∏–¥–µ–æ –≤ –æ—á–µ—Ä–µ–¥–∏ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É, –ø–æ–∂–∞–π–ª—É—Å—Ç–∞ –æ–∂–∏–¥–∞–π—Ç–µ –≥–æ—Ç–æ–≤–æ–≥–æ –≤–∏–¥–µ–æ')
        return
    mysqlfunc.insert_tg_users(message.from_user.first_name, \
                              message.from_user.last_name, \
                              message.from_user.id, \
                              message.from_user.username, \
                              message.from_user.language_code, \
                              pytz.datetime.datetime.now(utc_tz).strftime('%Y-%m-%d %H:%M:%S'))
    mysqlfunc.insert_bot_step(message.chat.id, '', pytz.datetime.datetime.now(utc_tz).strftime('%Y-%m-%d %H:%M:%S'))
    initialize_user_info(message)
    send_welcome_message(message)
    first_step_render(message)


@bot.message_handler(func=lambda message: message.text == '–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞')
def restart(message):
    start(message)

@bot.message_handler(func=lambda message: message.text == '–ü–æ–º–æ—á—å –ø—Ä–æ–µ–∫—Ç—É')
def donate_button(message):
    donate(message)

@bot.message_handler(func=lambda message: message.text == '–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É –∫–∞—Ç–∞–ª–æ–≥–∞')
def back(message):
    mysqlfunc.insert_bot_step(message.chat.id, 'back_to_category', pytz.datetime.datetime.now(utc_tz).strftime('%Y-%m-%d %H:%M:%S'))
    handle_option(message)

@bot.message_handler(content_types=['video'])
def video_handler(message):
    bot.send_message(message.chat.id, '–§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–∏–¥–µ–æ –ø–æ–∫–∞ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞',reply_markup=types.ReplyKeyboardRemove())
    if not mysqlfunc.check_user_render_queue(message.from_user.id):
        bot.send_message(message.chat.id, '–í–∏–¥–µ–æ –≤ –æ—á–µ—Ä–µ–¥–∏ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É, –ø–æ–∂–∞–π–ª—É—Å—Ç–∞ –æ–∂–∏–¥–∞–π—Ç–µ –≥–æ—Ç–æ–≤–æ–≥–æ –≤–∏–¥–µ–æ')
        return
    if mysqlfunc.get_bot_step(message.chat.id) == 'get_photo':
        bot.send_message(message.chat.id, '–í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é')
        return

@bot.message_handler(content_types=['photo'])
def photo_handler(message):
    print('photo_handler')
    step=mysqlfunc.get_bot_step(message.chat.id)
    if str(message.chat.id)+'_category' in userInfo:
        get_video_clips_name=mysqlfunc.get_video_clips_name('by_category',userInfo[str(message.chat.id)+'_category'])
        get_video_clips_names = [item['name_en'] for item in get_video_clips_name]
        if  message.text in get_video_clips_names:
            userInfo[str(message.chat.id)+'_get_video_clips_names']=message.text
        if message.text == '/stop': stop(message); return
        if (message.text == '–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É –∫–∞—Ç–∞–ª–æ–≥–∞'):back(message); return
        if message.text == '/about': about(message)
        if message.text == '/contacts': contacts(message)
        if message.text == '/donate': donate(message)
        if message.text == '/start': stop(message); return
        if (message.text == '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–∂–µ —Ñ–æ—Ç–æ'):
            bot.send_photo(chat_id=message.chat.id, photo=userInfo[str(message.chat.id)+'_photo'], caption='–ë—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ —ç—Ç–æ —Ñ–æ—Ç–æ')
            mysqlfunc.insert_bot_step(message.chat.id, 'get_previous_photo', pytz.datetime.datetime.now(utc_tz).strftime('%Y-%m-%d %H:%M:%S'))
            save_result(message)
        elif (message.content_type == 'photo' and step == 'get_photo'):
            userInfo[str(message.chat.id)+'_photo'] = (message.photo[-1].file_id)
            save_result(message)
        elif step == 'get_clip_name' and userInfo[str(message.chat.id)+'_get_video_clips_names'] in get_video_clips_names \
            or step == 'get_photo' and userInfo[str(message.chat.id)+'_get_video_clips_names'] in get_video_clips_names:
            userInfo[str(message.chat.id)+'_choose'] = message.text
            mysqlfunc.insert_user_data(message.from_user.first_name, message.from_user.last_name, message.chat.id, userInfo[str(message.chat.id)+'_choose'])
            mysqlfunc.insert_bot_step(message.chat.id, 'get_photo', pytz.datetime.datetime.now(utc_tz).strftime('%Y-%m-%d %H:%M:%S'))
            bot.send_photo(chat_id=message.chat.id, photo=open('./libs/imgs/photo_example.jpg', 'rb'),caption='–ü—Ä–∏–º–µ—Ä –∫–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –¥–µ–ª–∞—Ç—å —Ñ–æ—Ç–æ')
            get_previous_photo = mysqlfunc.get_photo_to_render(message.chat.id,'check')
            #–ù–æ–≤—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –ø—Ä–µ–¥–ª–∞–≥–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ñ–æ—Ç–æ
            if get_previous_photo:
                keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
                keyboard.add(types.KeyboardButton("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–∂–µ —Ñ–æ—Ç–æ"))
                userInfo[str(message.chat.id)+'_photo'] = get_previous_photo
                bot.send_message(message.chat.id, '–¢–µ–ø–µ—Ä—å –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é',reply_markup=keyboard)
            else:
                bot.send_message(message.chat.id, '–¢–µ–ø–µ—Ä—å –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é',reply_markup=ReplyKeyboardRemove())
            bot.register_next_step_handler(message, photo_handler)
        elif  message.content_type == 'photo' and str(message.chat.id)+'_botState' not in userInfo:
            bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ –¥–æ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞.–ù–∞–∂–º–∏—Ç–µ /start')
        else: #–ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏ –Ω–∞–¥–æ –ª–∏ –Ω–∞–º –æ–Ω–æ
            bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É –≤–∏–¥–µ–æ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–∞—à–µ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏')
            bot.register_next_step_handler(message, photo_handler)
    else:
        keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=False)
        keyboard.add(types.KeyboardButton(text='–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞'))
        bot.clear_step_handler_by_chat_id(message.from_user.id)
        userInfo.clear()
        bot.send_message(message.from_user.id, '–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –≤ –±–æ—Ç–µ',reply_markup=keyboard)
        bot.send_message(message.from_user.id, '–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞',reply_markup=keyboard)

def save_result(message):
    print('save_result')
    record_date = pytz.datetime.datetime.now(utc_tz).strftime('%Y-%m-%d %H:%M:%S')

    tg_user_id=message.from_user.id
    if userInfo[str(message.chat.id)+'_photo'] and mysqlfunc.get_bot_step(message.chat.id) == 'get_previous_photo':
        downloaded_photo = userInfo[str(message.chat.id)+'_photo']
    else:
        letters = string.ascii_lowercase
        # rnd_string = ''.join(random.choice(letters) for i in range(4))
        file_info = bot.get_file(userInfo[str(message.chat.id)+'_photo'])
        downloaded_photo = bot.download_file(file_info.file_path)
    bot.send_message(message.chat.id, '–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏–Ω—è—Ç—ã.\n \
        –í–∏–¥–µ–æ ' + str(userInfo[str(message.chat.id)+'_choose']) + ' —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è –æ—Ç 5 –º–∏–Ω—É—Ç, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –Ω–∞–≥—Ä—É–∑–∫–∏ –Ω–∞ —Å–µ—Ä–≤–∏—Å', \
        reply_markup=ReplyKeyboardRemove())
    mysqlfunc.insert_bot_step(message.chat.id, 'wait_video', pytz.datetime.datetime.now(utc_tz).strftime('%Y-%m-%d %H:%M:%S'))

  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∑–∞–ø–∏—Å—å —Å —Ç–∞–∫–æ–π –∂–µ –¥–∞—Ç–æ–π –≤ —Ç–∞–±–ª–∏—Ü–µ photos
    if mysqlfunc.check_record_exists(tg_user_id, record_date):  
        print(f"–ó–∞–ø–∏—Å—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {tg_user_id} –∏ –¥–∞—Ç—ã {record_date}")
        return
    else:
        try:
            mysqlfunc.insert_photos(downloaded_photo, tg_user_id, record_date)
            try:
                mysqlfunc.update_user_data(downloaded_photo, tg_user_id, record_date)
                mysqlfunc.set_status(tg_user_id, 'ready_to_render', record_date)
            except Exception as err:
                print(f"–û—à–∏–±–∫–∞ –Ω–∞ —Å—Ç–∞–¥–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ —Ç–∞–±–ª–∏—Ü—É users err: {err}")
        except Exception as err:
            print(f'{configs.stage} : –û—à–∏–±–∫–∞ –Ω–∞ —Å—Ç–∞–¥–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–æ—Ç–æ {message},user {message.from_user.id} err: {err}')

@bot.message_handler(content_types=['text'])
def return_state(message):
    step = mysqlfunc.get_bot_step(message.chat.id)
    print('message to function' + str(step))
    if step == 'first_step_render':
        first_step_render(message)
    elif step == 'back_to_category':
        handle_option(message)
    elif step == 'go_to_category':
        video_clip_categories(message)
    elif step == 'get_category':
        choose_clip_name(message)
    elif step == 'get_clip_name':
        photo_handler(message)
    elif step == 'get_photo':
        photo_handler(message)
    else:
        stop(message)

if __name__=='__main__':
        try:
            # //check mysql connect
            mysqlfunc.get_task_to_render()
            bot.polling(none_stop=True, interval=0)
        except Exception as e:
            print(e)
            trace=traceback.print_exc()
            print(traceback.format_exc())
            # bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞ –≤ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞',reply_markup=types.ReplyKeyboardRemove())
            # bot.send_message(, f'{configs.stage} {e} --------- {trace}')
            print(f'{configs.stage} {e} --------- {trace}')