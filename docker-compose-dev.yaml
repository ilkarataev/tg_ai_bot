version: '3.7'
services:
    mysql:
        container_name: ai_bot_mysql
        image: 'mysql:8.0'
        restart: 'always'
        command: mysqld --default-authentication-plugin=mysql_native_password --log_error_verbosity=1
        volumes:
            - './docker/mysql/conf.d:/etc/mysql/conf.d'
            - db_data:/var/lib/mysql
        ports: ['${IFACE}:${MYSQL_PORT_OUT}:3306']            
        environment:
            MYSQL_DATABASE: ${DATABASE_NAME}
            MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
    phpmyadmin:
        container_name: ai_bot_pma
        image: 'phpmyadmin/phpmyadmin'
        restart: 'always'
        ports: ['${IFACE}:${PHP_ADMIN_PORT}:80']
        environment:
            PMA_HOST: 'mysql'
            PMA_USER: ${DATABASE_USERNAME}
            PMA_PASSWORD: ${DATABASE_PASSWORD}
    migrations:
        container_name: ai_bot_migrations
        build:
            context: .
            dockerfile: './docker/migrations/Dockerfile'
        depends_on:
        - mysql
        environment:
            DATABASE_HOST_MIGRATIONS: ${DATABASE_HOST_MIGRATIONS}
            DATABASE_PORT_MIGRATIONS: ${DATABASE_PORT_MIGRATIONS}
            DATABASE_PORT: ${DATABASE_PORT}
            DATABASE_NAME: ${DATABASE_NAME}
            DATABASE_HOST: ${DATABASE_HOST}
            DATABASE_USERNAME: ${DATABASE_USERNAME}
            DATABASE_PASSWORD: ${DATABASE_PASSWORD}
    bot:
        container_name: ai_bot
        build:
            context: .
            dockerfile: './docker/bot/Dockerfile'
        restart: 'always'
        depends_on:
          - mysql
        environment:
            DATABASE_HOST_MIGRATIONS: ${DATABASE_HOST_MIGRATIONS}
            DATABASE_PORT_MIGRATIONS: ${DATABASE_PORT_MIGRATIONS}
            PROD: ${PROD}
            DATABASE_PORT: ${DATABASE_PORT}
            DATABASE_NAME: ${DATABASE_NAME}
            DATABASE_HOST: ${DATABASE_HOST}
            DATABASE_USERNAME: ${DATABASE_USERNAME}
            DATABASE_PASSWORD: ${DATABASE_PASSWORD}
            BOT_TOKEN: ${BOT_TOKEN}
    server:
        container_name: ai_server
        build:
            context: .
            dockerfile: './docker/backend/Dockerfile'
        restart: 'always'
        ports: ['${IFACE}:5000:5000']
        depends_on:
          - mysql
        environment:
            DATABASE_HOST_MIGRATIONS: ${DATABASE_HOST_MIGRATIONS}
            DATABASE_PORT_MIGRATIONS: ${DATABASE_PORT_MIGRATIONS}
            PROD: ${PROD}
            DATABASE_PORT: ${DATABASE_PORT}
            DATABASE_NAME: ${DATABASE_NAME}
            DATABASE_HOST: ${DATABASE_HOST}
            DATABASE_USERNAME: ${DATABASE_USERNAME}
            DATABASE_PASSWORD: ${DATABASE_PASSWORD}
            BOT_TOKEN: ${BOT_TOKEN}
volumes:
  db_data: